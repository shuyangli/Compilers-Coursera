Nonterminals useless in grammar

   expr_valid_empty


Terminals unused in grammar

   ERROR


Rules useless in grammar

   62 expr_valid_empty: expr
   63                 | /* empty */


State 6 conflicts: 1 shift/reduce
State 11 conflicts: 1 shift/reduce
State 13 conflicts: 1 shift/reduce
State 17 conflicts: 1 shift/reduce
State 18 conflicts: 1 shift/reduce
State 65 conflicts: 9 shift/reduce
State 68 conflicts: 9 shift/reduce
State 73 conflicts: 9 shift/reduce
State 89 conflicts: 1 shift/reduce
State 90 conflicts: 9 shift/reduce
State 93 conflicts: 14 shift/reduce
State 98 conflicts: 2 shift/reduce
State 99 conflicts: 2 shift/reduce
State 100 conflicts: 2 shift/reduce
State 101 conflicts: 2 shift/reduce
State 102 conflicts: 2 shift/reduce
State 103 conflicts: 2 shift/reduce
State 104 conflicts: 2 shift/reduce
State 111 conflicts: 1 shift/reduce
State 126 conflicts: 1 shift/reduce
State 136 conflicts: 9 shift/reduce
State 148 conflicts: 9 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class
    4           | error class_list

    5 class: CLASS TYPEID '{' feature_list '}' ';'
    6      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    7 feature_list: feature
    8             | feature_list feature
    9             | /* empty */
   10             | error feature_list

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' ';'
   12        | OBJECTID ':' TYPEID ASSIGN expr ';'
   13        | OBJECTID ':' TYPEID ';'

   14 formal_list: formal
   15            | formal_list ',' formal
   16            | /* empty */

   17 formal: OBJECTID ':' TYPEID

   18 expr_list_semicolon: expr ';'
   19                    | expr_list_semicolon expr ';'
   20                    | error expr_list_semicolon

   21 expr_list_comma: expr
   22                | expr_list_comma ',' expr
   23                | /* empty */

   24 expr: OBJECTID ASSIGN expr
   25     | expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr '.' OBJECTID '(' expr_list_comma ')'
   27     | OBJECTID '(' expr_list_comma ')'
   28     | IF expr THEN expr ELSE expr FI
   29     | WHILE expr LOOP expr POOL
   30     | '{' expr_list_semicolon '}'
   31     | LET expr_let
   32     | CASE expr OF case_list ESAC
   33     | NEW TYPEID
   34     | ISVOID expr
   35     | expr_op_arithmetic
   36     | expr_op_comparison
   37     | expr_op_unary
   38     | '(' expr ')'
   39     | OBJECTID
   40     | STR_CONST
   41     | INT_CONST
   42     | BOOL_CONST

   43 expr_op_arithmetic: expr '+' expr
   44                   | expr '-' expr
   45                   | expr '*' expr
   46                   | expr '/' expr

   47 expr_op_comparison: expr '<' expr
   48                   | expr '=' expr
   49                   | expr LE expr

   50 expr_op_unary: '~' expr
   51              | NOT expr

   52 expr_let: OBJECTID ':' TYPEID IN expr
   53         | OBJECTID ':' TYPEID ASSIGN expr IN expr
   54         | OBJECTID ':' TYPEID ',' expr_let
   55         | OBJECTID ':' TYPEID ASSIGN expr ',' expr_let
   56         | error expr_let

   57 case_list: case ';'
   58          | case_list case ';'
   59          | /* empty */
   60          | error case_list

   61 case: OBJECTID ':' TYPEID DARROW expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 11 25 26 27 38
')' (41) 11 25 26 27 38
'*' (42) 45
'+' (43) 43
',' (44) 15 22 54 55
'-' (45) 44
'.' (46) 25 26
'/' (47) 46
':' (58) 11 12 13 17 52 53 54 55 61
';' (59) 5 6 11 12 13 18 19 57 58
'<' (60) 47
'=' (61) 48
'@' (64) 25
'{' (123) 5 6 11 30
'}' (125) 5 6 11 30
'~' (126) 50
error (256) 4 10 20 56 60
CLASS (258) 5 6
ELSE (259) 28
FI (260) 28
IF (261) 28
IN (262) 52 53
INHERITS (263) 6
LET (264) 31
LOOP (265) 29
POOL (266) 29
THEN (267) 28
WHILE (268) 29
CASE (269) 32
ESAC (270) 32
OF (271) 32
DARROW (272) 61
NEW (273) 33
ISVOID (274) 34
STR_CONST (275) 40
INT_CONST (276) 41
BOOL_CONST (277) 42
TYPEID (278) 5 6 11 12 13 17 25 33 52 53 54 55 61
OBJECTID (279) 11 12 13 17 24 25 26 27 39 52 53 54 55 61
ASSIGN (280) 12 24 53 55
NOT (281) 51
LE (282) 49
ERROR (283)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
class_list (47)
    on left: 2 3 4, on right: 1 3 4
class (48)
    on left: 5 6, on right: 2 3
feature_list (49)
    on left: 7 8 9 10, on right: 5 6 8 10
feature (50)
    on left: 11 12 13, on right: 7 8
formal_list (51)
    on left: 14 15 16, on right: 11 15
formal (52)
    on left: 17, on right: 14 15
expr_list_semicolon (53)
    on left: 18 19 20, on right: 19 20 30
expr_list_comma (54)
    on left: 21 22 23, on right: 22 25 26 27
expr (55)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
    42, on right: 11 12 18 19 21 22 24 25 26 28 29 32 34 38 43 44 45
    46 47 48 49 50 51 52 53 55 61
expr_op_arithmetic (56)
    on left: 43 44 45 46, on right: 35
expr_op_comparison (57)
    on left: 47 48 49, on right: 36
expr_op_unary (58)
    on left: 50 51, on right: 37
expr_let (59)
    on left: 52 53 54 55 56, on right: 31 54 55 56
case_list (60)
    on left: 57 58 59 60, on right: 32 58 60
case (61)
    on left: 61, on right: 57 58


state 0

    0 $accept: . program $end

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    program     go to state 3
    class_list  go to state 4
    class       go to state 5


state 1

    4 class_list: error . class_list

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    class_list  go to state 6
    class       go to state 5


state 2

    5 class: CLASS . TYPEID '{' feature_list '}' ';'
    6      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 7


state 3

    0 $accept: program . $end

    $end  shift, and go to state 8


state 4

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 2

    $default  reduce using rule 1 (program)

    class  go to state 9


state 5

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 6

    3 class_list: class_list . class
    4           | error class_list .

    CLASS  shift, and go to state 2

    CLASS     [reduce using rule 4 (class_list)]
    $default  reduce using rule 4 (class_list)

    class  go to state 9


state 7

    5 class: CLASS TYPEID . '{' feature_list '}' ';'
    6      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 10
    '{'       shift, and go to state 11


state 8

    0 $accept: program $end .

    $default  accept


state 9

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 10

    6 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 12


state 11

    5 class: CLASS TYPEID '{' . feature_list '}' ';'

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14

    OBJECTID  [reduce using rule 9 (feature_list)]
    '}'       reduce using rule 9 (feature_list)

    feature_list  go to state 15
    feature       go to state 16


state 12

    6 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 17


state 13

   10 feature_list: error . feature_list

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14

    OBJECTID  [reduce using rule 9 (feature_list)]
    '}'       reduce using rule 9 (feature_list)

    feature_list  go to state 18
    feature       go to state 16


state 14

   11 feature: OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}' ';'
   12        | OBJECTID . ':' TYPEID ASSIGN expr ';'
   13        | OBJECTID . ':' TYPEID ';'

    '('  shift, and go to state 19
    ':'  shift, and go to state 20


state 15

    5 class: CLASS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 21

    feature  go to state 22


state 16

    7 feature_list: feature .

    $default  reduce using rule 7 (feature_list)


state 17

    6 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14

    OBJECTID  [reduce using rule 9 (feature_list)]
    '}'       reduce using rule 9 (feature_list)

    feature_list  go to state 23
    feature       go to state 16


state 18

    8 feature_list: feature_list . feature
   10             | error feature_list .

    OBJECTID  shift, and go to state 14

    OBJECTID  [reduce using rule 10 (feature_list)]
    $default  reduce using rule 10 (feature_list)

    feature  go to state 22


state 19

   11 feature: OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}' ';'

    OBJECTID  shift, and go to state 24

    $default  reduce using rule 16 (formal_list)

    formal_list  go to state 25
    formal       go to state 26


state 20

   12 feature: OBJECTID ':' . TYPEID ASSIGN expr ';'
   13        | OBJECTID ':' . TYPEID ';'

    TYPEID  shift, and go to state 27


state 21

    5 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 28


state 22

    8 feature_list: feature_list feature .

    $default  reduce using rule 8 (feature_list)


state 23

    6 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 29

    feature  go to state 22


state 24

   17 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 30


state 25

   11 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}' ';'
   15 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 31
    ','  shift, and go to state 32


state 26

   14 formal_list: formal .

    $default  reduce using rule 14 (formal_list)


state 27

   12 feature: OBJECTID ':' TYPEID . ASSIGN expr ';'
   13        | OBJECTID ':' TYPEID . ';'

    ASSIGN  shift, and go to state 33
    ';'     shift, and go to state 34


state 28

    5 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 29

    6 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 35


state 30

   17 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 36


state 31

   11 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}' ';'

    ':'  shift, and go to state 37


state 32

   15 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 24

    formal  go to state 38


state 33

   12 feature: OBJECTID ':' TYPEID ASSIGN . expr ';'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 53
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 34

   13 feature: OBJECTID ':' TYPEID ';' .

    $default  reduce using rule 13 (feature)


state 35

    6 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 6 (class)


state 36

   17 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 17 (formal)


state 37

   11 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}' ';'

    TYPEID  shift, and go to state 57


state 38

   15 formal_list: formal_list ',' formal .

    $default  reduce using rule 15 (formal_list)


state 39

   28 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 58
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 40

   31 expr: LET . expr_let

    error     shift, and go to state 59
    OBJECTID  shift, and go to state 60

    expr_let  go to state 61


state 41

   29 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 62
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 42

   32 expr: CASE . expr OF case_list ESAC

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 63
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 43

   33 expr: NEW . TYPEID

    TYPEID  shift, and go to state 64


state 44

   34 expr: ISVOID . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 65
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 45

   40 expr: STR_CONST .

    $default  reduce using rule 40 (expr)


state 46

   41 expr: INT_CONST .

    $default  reduce using rule 41 (expr)


state 47

   42 expr: BOOL_CONST .

    $default  reduce using rule 42 (expr)


state 48

   24 expr: OBJECTID . ASSIGN expr
   27     | OBJECTID . '(' expr_list_comma ')'
   39     | OBJECTID .

    ASSIGN  shift, and go to state 66
    '('     shift, and go to state 67

    $default  reduce using rule 39 (expr)


state 49

   51 expr_op_unary: NOT . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 68
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 50

   30 expr: '{' . expr_list_semicolon '}'

    error       shift, and go to state 69
    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr_list_semicolon  go to state 70
    expr                 go to state 71
    expr_op_arithmetic   go to state 54
    expr_op_comparison   go to state 55
    expr_op_unary        go to state 56


state 51

   38 expr: '(' . expr ')'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 72
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 52

   50 expr_op_unary: '~' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 73
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 53

   12 feature: OBJECTID ':' TYPEID ASSIGN expr . ';'
   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    ';'  shift, and go to state 81
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83


state 54

   35 expr: expr_op_arithmetic .

    $default  reduce using rule 35 (expr)


state 55

   36 expr: expr_op_comparison .

    $default  reduce using rule 36 (expr)


state 56

   37 expr: expr_op_unary .

    $default  reduce using rule 37 (expr)


state 57

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}' ';'

    '{'  shift, and go to state 84


state 58

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | IF expr . THEN expr ELSE expr FI
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    THEN  shift, and go to state 85
    LE    shift, and go to state 74
    '<'   shift, and go to state 75
    '='   shift, and go to state 76
    '+'   shift, and go to state 77
    '-'   shift, and go to state 78
    '*'   shift, and go to state 79
    '/'   shift, and go to state 80
    '@'   shift, and go to state 82
    '.'   shift, and go to state 83


state 59

   56 expr_let: error . expr_let

    error     shift, and go to state 59
    OBJECTID  shift, and go to state 60

    expr_let  go to state 86


state 60

   52 expr_let: OBJECTID . ':' TYPEID IN expr
   53         | OBJECTID . ':' TYPEID ASSIGN expr IN expr
   54         | OBJECTID . ':' TYPEID ',' expr_let
   55         | OBJECTID . ':' TYPEID ASSIGN expr ',' expr_let

    ':'  shift, and go to state 87


state 61

   31 expr: LET expr_let .

    $default  reduce using rule 31 (expr)


state 62

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   29     | WHILE expr . LOOP expr POOL
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    LOOP  shift, and go to state 88
    LE    shift, and go to state 74
    '<'   shift, and go to state 75
    '='   shift, and go to state 76
    '+'   shift, and go to state 77
    '-'   shift, and go to state 78
    '*'   shift, and go to state 79
    '/'   shift, and go to state 80
    '@'   shift, and go to state 82
    '.'   shift, and go to state 83


state 63

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   32     | CASE expr . OF case_list ESAC
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    OF   shift, and go to state 89
    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83


state 64

   33 expr: NEW TYPEID .

    $default  reduce using rule 33 (expr)


state 65

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   34     | ISVOID expr .
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    LE        [reduce using rule 34 (expr)]
    '<'       [reduce using rule 34 (expr)]
    '='       [reduce using rule 34 (expr)]
    '+'       [reduce using rule 34 (expr)]
    '-'       [reduce using rule 34 (expr)]
    '*'       [reduce using rule 34 (expr)]
    '/'       [reduce using rule 34 (expr)]
    '@'       [reduce using rule 34 (expr)]
    '.'       [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


state 66

   24 expr: OBJECTID ASSIGN . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 90
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 67

   27 expr: OBJECTID '(' . expr_list_comma ')'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    $default  reduce using rule 23 (expr_list_comma)

    expr_list_comma     go to state 91
    expr                go to state 92
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 68

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr
   51 expr_op_unary: NOT expr .

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    LE        [reduce using rule 51 (expr_op_unary)]
    '<'       [reduce using rule 51 (expr_op_unary)]
    '='       [reduce using rule 51 (expr_op_unary)]
    '+'       [reduce using rule 51 (expr_op_unary)]
    '-'       [reduce using rule 51 (expr_op_unary)]
    '*'       [reduce using rule 51 (expr_op_unary)]
    '/'       [reduce using rule 51 (expr_op_unary)]
    '@'       [reduce using rule 51 (expr_op_unary)]
    '.'       [reduce using rule 51 (expr_op_unary)]
    $default  reduce using rule 51 (expr_op_unary)


state 69

   20 expr_list_semicolon: error . expr_list_semicolon

    error       shift, and go to state 69
    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr_list_semicolon  go to state 93
    expr                 go to state 71
    expr_op_arithmetic   go to state 54
    expr_op_comparison   go to state 55
    expr_op_unary        go to state 56


state 70

   19 expr_list_semicolon: expr_list_semicolon . expr ';'
   30 expr: '{' expr_list_semicolon . '}'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '}'         shift, and go to state 94
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 95
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 71

   18 expr_list_semicolon: expr . ';'
   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    ';'  shift, and go to state 96
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83


state 72

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   38     | '(' expr . ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    ')'  shift, and go to state 97
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83


state 73

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr
   50 expr_op_unary: '~' expr .

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    LE        [reduce using rule 50 (expr_op_unary)]
    '<'       [reduce using rule 50 (expr_op_unary)]
    '='       [reduce using rule 50 (expr_op_unary)]
    '+'       [reduce using rule 50 (expr_op_unary)]
    '-'       [reduce using rule 50 (expr_op_unary)]
    '*'       [reduce using rule 50 (expr_op_unary)]
    '/'       [reduce using rule 50 (expr_op_unary)]
    '@'       [reduce using rule 50 (expr_op_unary)]
    '.'       [reduce using rule 50 (expr_op_unary)]
    $default  reduce using rule 50 (expr_op_unary)


state 74

   49 expr_op_comparison: expr LE . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 98
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 75

   47 expr_op_comparison: expr '<' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 99
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 76

   48 expr_op_comparison: expr '=' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 100
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 77

   43 expr_op_arithmetic: expr '+' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 101
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 78

   44 expr_op_arithmetic: expr '-' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 102
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 79

   45 expr_op_arithmetic: expr '*' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 103
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 80

   46 expr_op_arithmetic: expr '/' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 104
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 81

   12 feature: OBJECTID ':' TYPEID ASSIGN expr ';' .

    $default  reduce using rule 12 (feature)


state 82

   25 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_list_comma ')'

    TYPEID  shift, and go to state 105


state 83

   26 expr: expr '.' . OBJECTID '(' expr_list_comma ')'

    OBJECTID  shift, and go to state 106


state 84

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}' ';'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 107
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 85

   28 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 108
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 86

   56 expr_let: error expr_let .

    $default  reduce using rule 56 (expr_let)


state 87

   52 expr_let: OBJECTID ':' . TYPEID IN expr
   53         | OBJECTID ':' . TYPEID ASSIGN expr IN expr
   54         | OBJECTID ':' . TYPEID ',' expr_let
   55         | OBJECTID ':' . TYPEID ASSIGN expr ',' expr_let

    TYPEID  shift, and go to state 109


state 88

   29 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 110
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 89

   32 expr: CASE expr OF . case_list ESAC

    error     shift, and go to state 111
    OBJECTID  shift, and go to state 112

    ESAC      reduce using rule 59 (case_list)
    OBJECTID  [reduce using rule 59 (case_list)]

    case_list  go to state 113
    case       go to state 114


state 90

   24 expr: OBJECTID ASSIGN expr .
   25     | expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    LE        [reduce using rule 24 (expr)]
    '<'       [reduce using rule 24 (expr)]
    '='       [reduce using rule 24 (expr)]
    '+'       [reduce using rule 24 (expr)]
    '-'       [reduce using rule 24 (expr)]
    '*'       [reduce using rule 24 (expr)]
    '/'       [reduce using rule 24 (expr)]
    '@'       [reduce using rule 24 (expr)]
    '.'       [reduce using rule 24 (expr)]
    $default  reduce using rule 24 (expr)


state 91

   22 expr_list_comma: expr_list_comma . ',' expr
   27 expr: OBJECTID '(' expr_list_comma . ')'

    ')'  shift, and go to state 115
    ','  shift, and go to state 116


state 92

   21 expr_list_comma: expr .
   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    $default  reduce using rule 21 (expr_list_comma)


state 93

   19 expr_list_semicolon: expr_list_semicolon . expr ';'
   20                    | error expr_list_semicolon .

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    IF          [reduce using rule 20 (expr_list_semicolon)]
    LET         [reduce using rule 20 (expr_list_semicolon)]
    WHILE       [reduce using rule 20 (expr_list_semicolon)]
    CASE        [reduce using rule 20 (expr_list_semicolon)]
    NEW         [reduce using rule 20 (expr_list_semicolon)]
    ISVOID      [reduce using rule 20 (expr_list_semicolon)]
    STR_CONST   [reduce using rule 20 (expr_list_semicolon)]
    INT_CONST   [reduce using rule 20 (expr_list_semicolon)]
    BOOL_CONST  [reduce using rule 20 (expr_list_semicolon)]
    OBJECTID    [reduce using rule 20 (expr_list_semicolon)]
    NOT         [reduce using rule 20 (expr_list_semicolon)]
    '{'         [reduce using rule 20 (expr_list_semicolon)]
    '('         [reduce using rule 20 (expr_list_semicolon)]
    '~'         [reduce using rule 20 (expr_list_semicolon)]
    $default    reduce using rule 20 (expr_list_semicolon)

    expr                go to state 95
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 94

   30 expr: '{' expr_list_semicolon '}' .

    $default  reduce using rule 30 (expr)


state 95

   19 expr_list_semicolon: expr_list_semicolon expr . ';'
   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    ';'  shift, and go to state 117
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83


state 96

   18 expr_list_semicolon: expr ';' .

    $default  reduce using rule 18 (expr_list_semicolon)


state 97

   38 expr: '(' expr ')' .

    $default  reduce using rule 38 (expr)


state 98

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr
   49                   | expr LE expr .

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    '@'       [reduce using rule 49 (expr_op_comparison)]
    '.'       [reduce using rule 49 (expr_op_comparison)]
    $default  reduce using rule 49 (expr_op_comparison)


state 99

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   47                   | expr '<' expr .
   48                   | expr . '=' expr
   49                   | expr . LE expr

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    '@'       [reduce using rule 47 (expr_op_comparison)]
    '.'       [reduce using rule 47 (expr_op_comparison)]
    $default  reduce using rule 47 (expr_op_comparison)


state 100

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   48                   | expr '=' expr .
   49                   | expr . LE expr

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    '@'       [reduce using rule 48 (expr_op_comparison)]
    '.'       [reduce using rule 48 (expr_op_comparison)]
    $default  reduce using rule 48 (expr_op_comparison)


state 101

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   43                   | expr '+' expr .
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    '@'       [reduce using rule 43 (expr_op_arithmetic)]
    '.'       [reduce using rule 43 (expr_op_arithmetic)]
    $default  reduce using rule 43 (expr_op_arithmetic)


state 102

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   44                   | expr '-' expr .
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    '@'       [reduce using rule 44 (expr_op_arithmetic)]
    '.'       [reduce using rule 44 (expr_op_arithmetic)]
    $default  reduce using rule 44 (expr_op_arithmetic)


state 103

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   45                   | expr '*' expr .
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    '@'       [reduce using rule 45 (expr_op_arithmetic)]
    '.'       [reduce using rule 45 (expr_op_arithmetic)]
    $default  reduce using rule 45 (expr_op_arithmetic)


state 104

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   46                   | expr '/' expr .
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    '@'       [reduce using rule 46 (expr_op_arithmetic)]
    '.'       [reduce using rule 46 (expr_op_arithmetic)]
    $default  reduce using rule 46 (expr_op_arithmetic)


state 105

   25 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_list_comma ')'

    '.'  shift, and go to state 118


state 106

   26 expr: expr '.' OBJECTID . '(' expr_list_comma ')'

    '('  shift, and go to state 119


state 107

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}' ';'
   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '}'  shift, and go to state 120
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83


state 108

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | IF expr THEN expr . ELSE expr FI
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    ELSE  shift, and go to state 121
    LE    shift, and go to state 74
    '<'   shift, and go to state 75
    '='   shift, and go to state 76
    '+'   shift, and go to state 77
    '-'   shift, and go to state 78
    '*'   shift, and go to state 79
    '/'   shift, and go to state 80
    '@'   shift, and go to state 82
    '.'   shift, and go to state 83


state 109

   52 expr_let: OBJECTID ':' TYPEID . IN expr
   53         | OBJECTID ':' TYPEID . ASSIGN expr IN expr
   54         | OBJECTID ':' TYPEID . ',' expr_let
   55         | OBJECTID ':' TYPEID . ASSIGN expr ',' expr_let

    IN      shift, and go to state 122
    ASSIGN  shift, and go to state 123
    ','     shift, and go to state 124


state 110

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   29     | WHILE expr LOOP expr . POOL
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    POOL  shift, and go to state 125
    LE    shift, and go to state 74
    '<'   shift, and go to state 75
    '='   shift, and go to state 76
    '+'   shift, and go to state 77
    '-'   shift, and go to state 78
    '*'   shift, and go to state 79
    '/'   shift, and go to state 80
    '@'   shift, and go to state 82
    '.'   shift, and go to state 83


state 111

   60 case_list: error . case_list

    error     shift, and go to state 111
    OBJECTID  shift, and go to state 112

    ESAC      reduce using rule 59 (case_list)
    OBJECTID  [reduce using rule 59 (case_list)]

    case_list  go to state 126
    case       go to state 114


state 112

   61 case: OBJECTID . ':' TYPEID DARROW expr

    ':'  shift, and go to state 127


state 113

   32 expr: CASE expr OF case_list . ESAC
   58 case_list: case_list . case ';'

    ESAC      shift, and go to state 128
    OBJECTID  shift, and go to state 112

    case  go to state 129


state 114

   57 case_list: case . ';'

    ';'  shift, and go to state 130


state 115

   27 expr: OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 27 (expr)


state 116

   22 expr_list_comma: expr_list_comma ',' . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 131
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 117

   19 expr_list_semicolon: expr_list_semicolon expr ';' .

    $default  reduce using rule 19 (expr_list_semicolon)


state 118

   25 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_list_comma ')'

    OBJECTID  shift, and go to state 132


state 119

   26 expr: expr '.' OBJECTID '(' . expr_list_comma ')'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    $default  reduce using rule 23 (expr_list_comma)

    expr_list_comma     go to state 133
    expr                go to state 92
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 120

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' . ';'

    ';'  shift, and go to state 134


state 121

   28 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 135
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 122

   52 expr_let: OBJECTID ':' TYPEID IN . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 136
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 123

   53 expr_let: OBJECTID ':' TYPEID ASSIGN . expr IN expr
   55         | OBJECTID ':' TYPEID ASSIGN . expr ',' expr_let

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 137
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 124

   54 expr_let: OBJECTID ':' TYPEID ',' . expr_let

    error     shift, and go to state 59
    OBJECTID  shift, and go to state 60

    expr_let  go to state 138


state 125

   29 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 29 (expr)


state 126

   58 case_list: case_list . case ';'
   60          | error case_list .

    OBJECTID  shift, and go to state 112

    OBJECTID  [reduce using rule 60 (case_list)]
    $default  reduce using rule 60 (case_list)

    case  go to state 129


state 127

   61 case: OBJECTID ':' . TYPEID DARROW expr

    TYPEID  shift, and go to state 139


state 128

   32 expr: CASE expr OF case_list ESAC .

    $default  reduce using rule 32 (expr)


state 129

   58 case_list: case_list case . ';'

    ';'  shift, and go to state 140


state 130

   57 case_list: case ';' .

    $default  reduce using rule 57 (case_list)


state 131

   22 expr_list_comma: expr_list_comma ',' expr .
   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    $default  reduce using rule 22 (expr_list_comma)


state 132

   25 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_list_comma ')'

    '('  shift, and go to state 141


state 133

   22 expr_list_comma: expr_list_comma . ',' expr
   26 expr: expr '.' OBJECTID '(' expr_list_comma . ')'

    ')'  shift, and go to state 142
    ','  shift, and go to state 116


state 134

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' ';' .

    $default  reduce using rule 11 (feature)


state 135

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   28     | IF expr THEN expr ELSE expr . FI
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr

    FI   shift, and go to state 143
    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83


state 136

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr
   52 expr_let: OBJECTID ':' TYPEID IN expr .

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    LE        [reduce using rule 52 (expr_let)]
    '<'       [reduce using rule 52 (expr_let)]
    '='       [reduce using rule 52 (expr_let)]
    '+'       [reduce using rule 52 (expr_let)]
    '-'       [reduce using rule 52 (expr_let)]
    '*'       [reduce using rule 52 (expr_let)]
    '/'       [reduce using rule 52 (expr_let)]
    '@'       [reduce using rule 52 (expr_let)]
    '.'       [reduce using rule 52 (expr_let)]
    $default  reduce using rule 52 (expr_let)


state 137

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr
   53 expr_let: OBJECTID ':' TYPEID ASSIGN expr . IN expr
   55         | OBJECTID ':' TYPEID ASSIGN expr . ',' expr_let

    IN   shift, and go to state 144
    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    ','  shift, and go to state 145
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83


state 138

   54 expr_let: OBJECTID ':' TYPEID ',' expr_let .

    $default  reduce using rule 54 (expr_let)


state 139

   61 case: OBJECTID ':' TYPEID . DARROW expr

    DARROW  shift, and go to state 146


state 140

   58 case_list: case_list case ';' .

    $default  reduce using rule 58 (case_list)


state 141

   25 expr: expr '@' TYPEID '.' OBJECTID '(' . expr_list_comma ')'

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    $default  reduce using rule 23 (expr_list_comma)

    expr_list_comma     go to state 147
    expr                go to state 92
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 142

   26 expr: expr '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 26 (expr)


state 143

   28 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 28 (expr)


state 144

   53 expr_let: OBJECTID ':' TYPEID ASSIGN expr IN . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 148
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 145

   55 expr_let: OBJECTID ':' TYPEID ASSIGN expr ',' . expr_let

    error     shift, and go to state 59
    OBJECTID  shift, and go to state 60

    expr_let  go to state 149


state 146

   61 case: OBJECTID ':' TYPEID DARROW . expr

    IF          shift, and go to state 39
    LET         shift, and go to state 40
    WHILE       shift, and go to state 41
    CASE        shift, and go to state 42
    NEW         shift, and go to state 43
    ISVOID      shift, and go to state 44
    STR_CONST   shift, and go to state 45
    INT_CONST   shift, and go to state 46
    BOOL_CONST  shift, and go to state 47
    OBJECTID    shift, and go to state 48
    NOT         shift, and go to state 49
    '{'         shift, and go to state 50
    '('         shift, and go to state 51
    '~'         shift, and go to state 52

    expr                go to state 150
    expr_op_arithmetic  go to state 54
    expr_op_comparison  go to state 55
    expr_op_unary       go to state 56


state 147

   22 expr_list_comma: expr_list_comma . ',' expr
   25 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma . ')'

    ')'  shift, and go to state 151
    ','  shift, and go to state 116


state 148

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr
   53 expr_let: OBJECTID ':' TYPEID ASSIGN expr IN expr .

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    LE        [reduce using rule 53 (expr_let)]
    '<'       [reduce using rule 53 (expr_let)]
    '='       [reduce using rule 53 (expr_let)]
    '+'       [reduce using rule 53 (expr_let)]
    '-'       [reduce using rule 53 (expr_let)]
    '*'       [reduce using rule 53 (expr_let)]
    '/'       [reduce using rule 53 (expr_let)]
    '@'       [reduce using rule 53 (expr_let)]
    '.'       [reduce using rule 53 (expr_let)]
    $default  reduce using rule 53 (expr_let)


state 149

   55 expr_let: OBJECTID ':' TYPEID ASSIGN expr ',' expr_let .

    $default  reduce using rule 55 (expr_let)


state 150

   25 expr: expr . '@' TYPEID '.' OBJECTID '(' expr_list_comma ')'
   26     | expr . '.' OBJECTID '(' expr_list_comma ')'
   43 expr_op_arithmetic: expr . '+' expr
   44                   | expr . '-' expr
   45                   | expr . '*' expr
   46                   | expr . '/' expr
   47 expr_op_comparison: expr . '<' expr
   48                   | expr . '=' expr
   49                   | expr . LE expr
   61 case: OBJECTID ':' TYPEID DARROW expr .

    LE   shift, and go to state 74
    '<'  shift, and go to state 75
    '='  shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78
    '*'  shift, and go to state 79
    '/'  shift, and go to state 80
    '@'  shift, and go to state 82
    '.'  shift, and go to state 83

    $default  reduce using rule 61 (case)


state 151

   25 expr: expr '@' TYPEID '.' OBJECTID '(' expr_list_comma ')' .

    $default  reduce using rule 25 (expr)
